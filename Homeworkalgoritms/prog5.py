#Сложность алгоритма O(n^2). Логично, что когда стек становится пустым, то у нас закрылись внешние скобки.
#При помощи стека мы отлавливаем индексы внешних скобок.
#При помощи первого условия мы находим начальную внешнюю скобку и записываем её в переменную f. Если это условие не срабатывает мы добавляем скобку в стек
#Если в стеке два последних элемента - валидные скобки, мы их удаляем
#Если после выполнения этой операции стек становится пустым, мы понимаем, что закрылись внешние скобки и добавляем i-ую переменную в список, с индексами внешних скобок.
#В конце мы записываем в строку все элементы начального списка, индекс которых не равен элементам во втором списке.

def F(st):
    lst = list(st) #Переносим строку в список
    lst_end = [] #Пустой список, в который мы будем записывать индексы внешних скобок
    stack = [] #Стек, при помощи которого мы будем искать внешние скобки.
    final_str = ''# В сторку будут записываться конечные не внешние скобки
    f = 0
    for i in range(len(lst)):
        if len(stack) == 0:
            stack.append(lst[i])
            f = i
        else:
            stack.append(lst[i])
            if stack[len(stack) - 2] + stack[len(stack) - 1] == '()':
                stack.pop()
                stack.pop()
        if len(stack) == 0:
            lst_end.append(f)
            lst_end.append(i)
            f = 0
    for i in range(len(lst)):
        if i not in lst_end:
            final_str += lst[i]
    return final_str


print(F('(()())(())(()(()))'))

